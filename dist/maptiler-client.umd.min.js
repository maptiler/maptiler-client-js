(function(p,P){typeof exports=="object"&&typeof module<"u"?P(exports):typeof define=="function"&&define.amd?define(["exports"],P):(p=typeof globalThis<"u"?globalThis:p||self,P(p.maptilerclient={}))})(this,function(p){"use strict";function P(){return typeof self<"u"?fetch.bind(self):typeof global<"u"&&global.fetch?global.fetch:null}class U{constructor(){this._apiKey="",this._fetch=P()}set apiKey(e){this._apiKey=e}get apiKey(){return this._apiKey}set fetch(e){this._fetch=e}get fetch(){return this._fetch}}const y=new U,k={AUTO:"auto",ALBANIAN:"sq",ARABIC:"ar",ARMENIAN:"hy",AZERBAIJANI:"az",BELORUSSIAN:"be",BOSNIAN:"bs",BRETON:"br",BULGARIAN:"bg",CATALAN:"ca",CHINESE:"zh",CROATIAN:"hr",CZECH:"cs",DANISH:"da",DUTCH:"nl",ENGLISH:"en",ESPERANTO:"eo",ESTONIAN:"et",FINNISH:"fi",FRENCH:"fr",FRISIAN:"fy",GEORGIAN:"ka",GERMAN:"de",GREEK:"el",HEBREW:"he",HUNGARIAN:"hu",ICELANDIC:"is",IRISH:"ga",ITALIAN:"it",JAPANESE:"ja",KANNADA:"kn",KAZAKH:"kk",KOREAN:"ko",ROMAN_LATIN:"la",LATVIAN:"lv",LITHUANIAN:"lt",LUXEMBOURGISH:"lb",MACEDONIAN:"mk",MALTESE:"mt",NORWEGIAN:"no",POLISH:"pl",PORTUGUESE:"pt",ROMANIAN:"ro",ROMANSH:"rm",RUSSIAN:"ru",SCOTTISH_GAELIC:"gd",SERBIAN_CYRILLIC:"sr",SLOVAK:"sk",SLOVENE:"sl",SPANISH:"es",SWEDISH:"sv",THAI:"th",TURKISH:"tr",UKRAINIAN:"uk",WELSH:"cy"},O=new Set(Object.values(k));function C(){if(typeof navigator>"u")return Intl.DateTimeFormat().resolvedOptions().locale.split("-")[0];const n=Array.from(new Set(navigator.languages.map(e=>e.split("-")[0]))).filter(e=>O.has(e));return n.length?n[0]:k.ENGLISH}var H=(n,e,t)=>new Promise((s,r)=>{var o=i=>{try{c(t.next(i))}catch(l){r(l)}},a=i=>{try{c(t.throw(i))}catch(l){r(l)}},c=i=>i.done?s(i.value):Promise.resolve(i.value).then(o,a);c((t=t.apply(n,e)).next())});function w(n){return H(this,arguments,function*(e,t={}){if(y.fetch===null)throw new Error("The fetch function was not found. If on NodeJS < 18 please specify the fetch function with config.fetch");if(new URL(e).searchParams.get("key").trim()==="")throw new Error("The MapTiler Cloud API key is missing. Set it in `config.apiKey` or get one for free at https://maptiler.com");return y.fetch(e,t)})}const g={maptilerApiURL:"https://api.maptiler.com/",mapStyle:"streets-v2"};Object.freeze(g);class I extends Error{constructor(e,t=""){super(`Call to enpoint ${e.url} failed with the status code ${e.status}. ${t}`),this.res=e}}var b=(n,e,t)=>new Promise((s,r)=>{var o=i=>{try{c(t.next(i))}catch(l){r(l)}},a=i=>{try{c(t.throw(i))}catch(l){r(l)}},c=i=>i.done?s(i.value):Promise.resolve(i.value).then(o,a);c((t=t.apply(n,e)).next())});const $={400:"Query too long / Invalid parameters",403:"Key is missing, invalid or restricted"};function x(n){return b(this,arguments,function*(e,t={}){var s;if(typeof e!="string"||e.trim().length===0)throw new Error("The query must be a non-empty string");const r=new URL(`geocoding/${encodeURIComponent(e)}.json`,g.maptilerApiURL);if(r.searchParams.set("key",(s=t.apiKey)!=null?s:y.apiKey),"bbox"in t&&r.searchParams.set("bbox",t.bbox.join(",")),"proximity"in t&&r.searchParams.set("proximity",t.proximity.join(",")),"language"in t){const c=Array.from(new Set((Array.isArray(t.language)?t.language:[t.language]).map(i=>i===k.AUTO?C():i))).join(",");r.searchParams.set("language",c)}const o=r.toString(),a=yield w(o);if(!a.ok)throw new I(a,a.status in $?$[a.status]:"");return yield a.json()})}function D(n){return b(this,arguments,function*(e,t={}){var s;if(!Array.isArray(e)||e.length<2)throw new Error("The position must be an array of form [lng, lat].");const r=new URL(`geocoding/${e[0]},${e[1]}.json`,g.maptilerApiURL);if(r.searchParams.set("key",(s=t.apiKey)!=null?s:y.apiKey),"language"in t){const c=Array.from(new Set((Array.isArray(t.language)?t.language:[t.language]).map(i=>i===k.AUTO?C():i))).join(",");r.searchParams.set("language",c)}const o=r.toString(),a=yield w(o);if(!a.ok)throw new I(a,a.status in $?$[a.status]:"");return yield a.json()})}const G={forward:x,reverse:D,language:k};var _=(n,e,t)=>new Promise((s,r)=>{var o=i=>{try{c(t.next(i))}catch(l){r(l)}},a=i=>{try{c(t.throw(i))}catch(l){r(l)}},c=i=>i.done?s(i.value):Promise.resolve(i.value).then(o,a);c((t=t.apply(n,e)).next())});const K={403:"Key is missing, invalid or restricted"};function M(){return _(this,arguments,function*(n={}){var e;const t=new URL("geolocation/ip.json",g.maptilerApiURL);t.searchParams.set("key",(e=n.apiKey)!=null?e:y.apiKey);const s=t.toString(),r=yield w(s);if(!r.ok)throw new I(r,r.status in K?K[r.status]:"");return yield r.json()})}const B={info:M};var j=(n,e,t)=>new Promise((s,r)=>{var o=i=>{try{c(t.next(i))}catch(l){r(l)}},a=i=>{try{c(t.throw(i))}catch(l){r(l)}},c=i=>i.done?s(i.value):Promise.resolve(i.value).then(o,a);c((t=t.apply(n,e)).next())});const N={403:"Key is missing, invalid or restricted"};function W(n){return j(this,arguments,function*(e,t={}){var s;if(typeof e!="string"||e.trim().length===0)throw new Error("The query must be a non-empty string");const r=new URL(`coordinates/search/${e}.json`,g.maptilerApiURL);r.searchParams.set("key",(s=t.apiKey)!=null?s:y.apiKey),"limit"in t&&r.searchParams.set("limit",t.limit.toString()),"transformations"in t&&r.searchParams.set("transformations",t.transformations.toString()),"exports"in t&&r.searchParams.set("exports",t.exports.toString());const o=r.toString(),a=yield w(o);if(!a.ok)throw new I(a,a.status in N?N[a.status]:"");return yield a.json()})}function F(n){return j(this,arguments,function*(e,t={}){var s;const r=(Array.isArray(e[0])?e:[e]).map(i=>`${i[0]},${i[1]}`).join(";"),o=new URL(`coordinates/transform/${r}.json`,g.maptilerApiURL);o.searchParams.set("key",(s=t.apiKey)!=null?s:y.apiKey),"sourceCrs"in t&&o.searchParams.set("s_srs",t.sourceCrs.toString()),"targetCrs"in t&&o.searchParams.set("t_srs",t.targetCrs.toString()),"operations"in t&&o.searchParams.set("ops",(Array.isArray(t.operations)?t.operations:[t.operations]).join("|"));const a=o.toString(),c=yield w(a);if(!c.ok)throw new I(c,c.status in N?N[c.status]:"");return yield c.json()})}const q={search:W,transform:F};var z=(n,e,t)=>new Promise((s,r)=>{var o=i=>{try{c(t.next(i))}catch(l){r(l)}},a=i=>{try{c(t.throw(i))}catch(l){r(l)}},c=i=>i.done?s(i.value):Promise.resolve(i.value).then(o,a);c((t=t.apply(n,e)).next())});const T={403:"Key is missing, invalid or restricted"};function J(n){return z(this,arguments,function*(e,t={}){var s;if(typeof e!="string"||e.trim().length===0)throw new Error("The data ID must be a non-empty string");const r=new URL(`data/${encodeURIComponent(e)}/features.json`,g.maptilerApiURL);r.searchParams.set("key",(s=t.apiKey)!=null?s:y.apiKey);const o=r.toString(),a=yield w(o);if(!a.ok)throw new I(a,a.status in T?T[a.status]:"");return yield a.json()})}const V={get:J};function Z(n,e,t){let s=e[0],r=e[1],o=t[0]-s,a=t[1]-r;if(o!==0||a!==0){const c=((n[0]-s)*o+(n[1]-r)*a)/(o*o+a*a);c>1?(s=t[0],r=t[1]):c>0&&(s+=o*c,r+=a*c)}return o=n[0]-s,a=n[1]-r,o*o+a*a}function R(n,e,t,s,r){let o=s,a;for(let c=e+1;c<t;c++){const i=Z(n[c],n[e],n[t]);i>o&&(a=c,o=i)}o>s&&(a-e>1&&R(n,e,a,s,r),r.push(n[a]),t-a>1&&R(n,a,t,s,r))}function Q(n,e){const t=n.length-1,s=[n[0]];return R(n,0,t,e,s),s.push(n[t]),s}function X(n,e){if(n.length<=2)return n;const t=e!==void 0?e*e:1;return Q(n,t)}function v(n,e=!0){let t=`${n[0]},${n[1]}`;return n.length===3&&e&&(t+=`,${n[2]}`),t}function E(n,e=3e3){let t=n.map(o=>o.join(",")).join("|"),s=5e-6;const r=1e-5;for(;t.length>e;)t=X(n,s).map(o=>`${o[0]},${o[1]}`).join("|"),s+=r;return t}function Y(n,e,t={}){var s,r,o,a,c,i;const l=(s=t.style)!=null?s:g.mapStyle,S=t.hiDPI?"@2x":"",A=(r=t.format)!=null?r:"png";let f=~~((o=t.width)!=null?o:1024),u=~~((a=t.height)!=null?a:1024);t.hiDPI&&(f=~~(f/2),u=~~(u/2));const h=new URL(`maps/${encodeURIComponent(l)}/static/${n[0]},${n[1]},${e}/${f}x${u}${S}.${A}`,g.maptilerApiURL);if("attribution"in t&&h.searchParams.set("attribution",t.attribution.toString()),"markers"in t){let m="";const d="markerIcon"in t;d&&(m+=`icon:${t.markerIcon}|`),d&&"markerAnchor"in t&&(m+=`anchor:${t.markerAnchor}|`),d&&t.hiDPI&&(m+="scale:2|");const L=Array.isArray(t.markers[0])?t.markers:[t.markers];m+=L.map(rt=>v(rt,!d)).join("|"),h.searchParams.set("markers",m)}if("path"in t){let m="";if(m+=`fill:${(c=t.pathFillColor)!=null?c:"none"}|`,"pathStrokeColor"in t&&(m+=`stroke:${t.pathStrokeColor}|`),"pathWidth"in t){const d=t.pathWidth/(t.hiDPI?2:1);m+=`width:${d.toString()}|`}m+=E(t.path),h.searchParams.set("path",m)}return h.searchParams.set("key",(i=t.apiKey)!=null?i:y.apiKey),h.toString()}function tt(n,e={}){var t,s,r,o,a,c;const i=(t=e.style)!=null?t:g.mapStyle,l=e.hiDPI?"@2x":"",S=(s=e.format)!=null?s:"png";let A=~~((r=e.width)!=null?r:1024),f=~~((o=e.height)!=null?o:1024);e.hiDPI&&(A=~~(A/2),f=~~(f/2));const u=new URL(`maps/${encodeURIComponent(i)}/static/${n[0]},${n[1]},${n[2]},${n[3]}/${A}x${f}${l}.${S}`,g.maptilerApiURL);if("attribution"in e&&u.searchParams.set("attribution",e.attribution.toString()),"padding"in e&&u.searchParams.set("padding",e.padding.toString()),"markers"in e){let h="";const m="markerIcon"in e;m&&(h+=`icon:${e.markerIcon}|`),m&&"markerAnchor"in e&&(h+=`anchor:${e.markerAnchor}|`),m&&e.hiDPI&&(h+="scale:2|");const d=Array.isArray(e.markers[0])?e.markers:[e.markers];h+=d.map(L=>v(L,!m)).join("|"),u.searchParams.set("markers",h)}if("path"in e){let h="";if(h+=`fill:${(a=e.pathFillColor)!=null?a:"none"}|`,"pathStrokeColor"in e&&(h+=`stroke:${e.pathStrokeColor}|`),"pathWidth"in e){const m=e.pathWidth/(e.hiDPI?2:1);h+=`width:${m.toString()}|`}h+=E(e.path),u.searchParams.set("path",h)}return u.searchParams.set("key",(c=e.apiKey)!=null?c:y.apiKey),u.toString()}function et(n={}){var e,t,s,r,o,a;if(!("markers"in n)&&!("path"in n))throw new Error("Automatic static maps require markers and/or path to be created.");const c=(e=n.style)!=null?e:g.mapStyle,i=n.hiDPI?"@2x":"",l=(t=n.format)!=null?t:"png";let S=~~((s=n.width)!=null?s:1024),A=~~((r=n.height)!=null?r:1024);n.hiDPI&&(S=~~(S/2),A=~~(A/2));const f=new URL(`maps/${encodeURIComponent(c)}/static/auto/${S}x${A}${i}.${l}`,g.maptilerApiURL);if("attribution"in n&&f.searchParams.set("attribution",n.attribution.toString()),"padding"in n&&f.searchParams.set("padding",n.padding.toString()),"markers"in n){let u="";const h="markerIcon"in n;h&&(u+=`icon:${n.markerIcon}|`),h&&"markerAnchor"in n&&(u+=`anchor:${n.markerAnchor}|`),h&&n.hiDPI&&(u+="scale:2|");const m=Array.isArray(n.markers[0])?n.markers:[n.markers];u+=m.map(d=>v(d,!h)).join("|"),f.searchParams.set("markers",u)}if("path"in n){let u="";if(u+=`fill:${(o=n.pathFillColor)!=null?o:"none"}|`,"pathStrokeColor"in n&&(u+=`stroke:${n.pathStrokeColor}|`),"pathWidth"in n){const h=n.pathWidth/(n.hiDPI?2:1);u+=`width:${h.toString()}|`}u+=E(n.path),f.searchParams.set("path",u)}return f.searchParams.set("key",(a=n.apiKey)!=null?a:y.apiKey),f.toString()}const nt={centered:Y,bounded:tt,automatic:et};p.ClientConfig=U,p.LanguageGeocoding=k,p.ServiceError=I,p.config=y,p.coordinates=q,p.data=V,p.geocoding=G,p.geolocation=B,p.staticMaps=nt,Object.defineProperty(p,"__esModule",{value:!0})});
